"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.configCmd=void 0;const t=require("../config"),o=e(require("../log")),n=require("../util"),s=require("../config/DefaultConfig"),r=require("../common/Constants"),i=e(require("path")),f=e(require("os"));function u(e){return!e.startsWith("_")&&!(e.startsWith("//")&&e.includes(":_"))}function a(e){if(process.argv.length>4)return void o.default.error("",'The input format must be "config list [-j|--json]".');const a=[];for(const o of t.config.data.keys()){if(o===s.configType.DEFAULT&&!e)continue;const n=t.config.data.get(o);if(!n||n.size<=0)continue;const r=t.config.sources.get(o);a.push(`; "${o}" config from ${r}`,""),n.forEach(((e,n)=>{if(u(n)){const s=t.config.find(n);let r="",i="";s&&o!==s&&(r="; ",i=`; overridden by ${s}`),a.push(`${r}${n} = ${JSON.stringify(e)} ${i}`)}})),a.push("")}e||a.push(`; "user" config from ${i.default.join(f.default.homedir(),r.Constants.PmDir,r.Constants.PmRc)}`,`; node bin location = ${process.execPath}`,`; node version = ${process.version}`,`; ${r.Constants.PM} local prefix = ${f.default.homedir()}`,`; ${r.Constants.PM} version = ${r.Constants.PmVersion}`,`; cwd = ${process.cwd()}`,`; HOME = ${f.default.homedir()}`),(0,n.output)(a.join("\n").trim())}exports.configCmd=function(e,s,i,f){o.default.disableProgress();try{switch(e){case"set":!function(e,n){if(process.argv.length>6||null==e||null==n)return void o.default.error("",'The input format must be "config set <key> <value>".');e=e.trim(),n=n.trim(),o.default.debug("config","set %j %j",e,n),t.config.set(e,n),t.config.save()}(s,i);break;case"get":!function(e,s){if(process.argv.length>5)return void o.default.error("",'The input format must be "config get <key>".');if(e)if(u(e)){const o=t.config.get(e);(0,n.output)(o)}else o.default.error("",`The ${e} option is protected, and cannot be retrieved in this way.`);else a(s)}(s,f.long);break;case"delete":!function(e){if(process.argv.length>5||!e)return void o.default.error("",'The input format must be "config delete <key>".');t.config.delete(e)?t.config.save():(0,n.output)("The key doesn't exist")}(s);break;case"list":case"ls":f.json?function(){if(process.argv.length>5)return void o.default.error("",'The input format must be "config list [-j|--json]".');const e={};for(const o of t.config.data.values())for(const n of o.keys())u(n)&&(e[n]=t.config.get(n));(0,n.output)(JSON.stringify(e,null,2))}():a(f.long);break;default:e?o.default.error("",`Could not find a subcommand named "${e}" for "${r.Constants.PM} config"`,"- available subcommands: set, get, delete, list, -h."):o.default.error("",`Missing subcommand for "${r.Constants.PM} config"`,"- available subcommands: set, get, delete, list, -h.")}}finally{o.default.enableProgress()}};