"use strict";var t=this&&this.__createBinding||(Object.create?function(t,e,i,o){void 0===o&&(o=i);var s=Object.getOwnPropertyDescriptor(e,i);s&&!("get"in s?!e.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,o,s)}:function(t,e,i,o){void 0===o&&(o=i),t[o]=e[i]}),e=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(i){if(i&&i.__esModule)return i;var o={};if(null!=i)for(var s in i)"default"!==s&&Object.prototype.hasOwnProperty.call(i,s)&&t(o,i,s);return e(o,i),o},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Config=void 0;const s=require("./TypeValidate"),n=require("../util"),a=i(require("os")),r=o(require("path")),l=o(require("../log")),c=require("./DefaultConfig"),d=require("../common/Constants"),f=o(require("ini")),u=r.default.join(a.homedir(),d.Constants.PmDir,d.Constants.PmRc),h=r.default.join(process.cwd(),d.Constants.PmRc);exports.Config=class{constructor(){this.defaults=c.defaultConfig;const t=[...g];this.data=new Map,this.sources=new Map;for(const e of t)this.data.set(e,new Map),this.sources.set(e,e);this.loaded=!1}get(t){this.checkConfigIsLoaded();for(const e of g){const i=this.data.get(e);if(i&&i.has(t))return i.get(t)}}getString(t){return this.get(t)}set(t,e){this.checkConfigIsLoaded();const i=this.data.get(c.configType.USER);i&&this.validate(i,t,e,u,!0)}find(t){this.checkConfigIsLoaded();for(const e of g){const i=this.data.get(e);if(i&&i.has(t))return e}return""}delete(t){this.checkConfigIsLoaded();const e=this.data.get(c.configType.USER);return!!e&&(!!e.has(t)&&(e.delete(t),!0))}save(){if(!this.loaded)throw new Error("Call config.load() before saving.");const t=f.default.stringify(this.toObject(this.data.get(c.configType.USER))).trim()+a.EOL;t.trim()?n.FsUtil.writeFileSync(u,t):n.FsUtil.existsSync(u)&&n.FsUtil.unlinkSync(u)}toObject(t){const e={};return t&&t.forEach(((t,i)=>{e[i]=t})),e}load(t){if(this.loaded)throw new Error(`Attempting to load ${d.Constants.PM} config multiple times.`);this.loadDefaults(),this.loadCLI(t),this.loadProjectConfig(),this.loadUserConfig(),this.loaded=!0}loadDefaults(){this.loadObject(this.defaults,c.configType.DEFAULT,c.configType.DEFAULT)}loadObject(t,e,i){this.sources.set(e,i);const o=this.data.get(e);if(o)for(const e of Object.keys(t))this.validate(o,e,t[e],i,!1)}loadCLI(t){t&&this.loadObject(t,c.configType.CLI,"command line options")}invalidHandler(t,e,i,o,s){o&&s&&(o.startsWith("Invalid key")?l.default.warn("",`${o}`):l.default.warn("invalid config",`${t}=${JSON.stringify(e)}`,`set in ${i}${o}`))}loadProjectConfig(){this.sources.set(c.configType.PROJECT,h),this.loadFile(h,c.configType.PROJECT)}loadUserConfig(){this.sources.set(c.configType.USER,u),this.loadFile(u,c.configType.USER)}loadFile(t,e){if(!n.FsUtil.existsSync(t))return;const i=n.FsUtil.readFileSync(t,"utf-8"),o=f.default.parse(i);this.loadObject(o,e,t)}validate(t,e,i,o,n){const a=(0,s.validate)(t,e,i);"string"==typeof a?this.invalidHandler(e,i,o,a,n):t.set(e,i)}checkConfigIsLoaded(){if(!this.loaded)throw new Error("Call config.load() before setting values.")}};const g=new Set(["cli","project","user","default"]);